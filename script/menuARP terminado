:<<EOF
	manejo de el comando arp 
	menu
	MANEJO CACHE ARP LOCAL
	1 Buscar la cache arp del equipo
	2.Buscar una mac de un equipo dentro de la cache ARP<-- tiene que pedir la ip del equipo a buscar 
	3.Borrar una entrada de la cache 
	4.Salir

	Opcion: 


EOF

#--definicion de funciones 
function menu(){
	opcion=0
	clear
	echo  "             MANEJO CACHE ARP LOCAL
        ===================================
        1. Buscar la cache arp del equipo
        2. Buscar una mac de un equipo dentro de la cache ARP<-- tiene que pedir$
        3. Borrar una entrada de la cache 
        4. Añadir una entrada estatica a la cache
	5. Añadir una entrada IP
	6. Salir

  "
	read -p "Opcion:  " opcion
}

function mostrarARP(){
	echo ".......mostrando la cache del equipo....."
	arp -ne 
	sleep 3s
}

function buscarMAC(){
salida=1
	
	
	 while test $salida -ne 0 
 do

	read -p "Introduce la ip de la Mac que quieras saber"  miip
#	if test `$miip |grep '[0-9]{3}\.[0-9]{3}'`
#	[[ $miip =~ '[0-9]{3}\.[0-9]{3}' ]] 
	 if  echo $miip | grep  '^\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}'
		then 
		echo "cumple el patron"
			salida=0
		else 
			echo "No has introducido una ip valida" 
			
	fi

	 done

	mac= `arp -ne | grep $miip | tr -s " " | cut -d " " -f 3`
	 if  test ${#mac}  -lt 1 
	then  echo "Lo siento, no existe esa Ip" 
	fi
	#echo $mac || echo 
	sleep 8s


}
function borrarEntrada(){

	entrodos=( `arp -ne | grep -e "[0-9]" | tr -s " " | cut -d " " -f 1` )
#entradas=( `arp -ne |tail -n +2| tr -s " " | cut -d " " -f 1` )
	#entradas=( `arp -ne | tr -s " " | cut -d " " -f 1` )
	#numentradas=${#entradas[*]} # aqui me da dos elementos en el array ... cuando solo tengo uno en mi maquina virtual... WTF... de hecho el segundo esta vacio... y si le elimino utilizando
#la opcion 2 ... me pide nombre de anfitrion... la cosa es que no deberia salir... XD
	numentrodos=${#entrodos[*]}
	echo -e " $numentrodos esto es el numero de entradas de entrodos" 	
	#echo -e $numentradas
	for ((i=0; i<numentrodos;i++))
		do 
	            echo -e "Direccion $((i+1)) ...... ${entrodos[i]}"
		done
	read -p "Cual deseas eliminar?" entradaborrable
	entradaborrable=$(($entradaborrable-1))  # sin espacios PAR FAVAR
#entradaborrable=expr $entradaborrable-1 ???? esto nno tira 
	echo "$entradaborrable" 
	sudo arp -d ${entrodos[entradaborrable]} && echo -e  "eliminada" || echo -e "no hay esa opcion"
sleep 3s

}

function añadirIpNueva(){
salida=1
	while test $salida -ne 0
      do
	read -p "Dime que IP quieres poner " miip

	if echo $miip | grep -e '^\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}' 
	then 
		echo -e "patron es correcto" 
		salida=0
	else
		echo -e "ese patron no cumple las condiciones "
		salida=1
	fi
     done
while test $salida -ne 1
do
	read -p "Dime que MAC quieres poner" mimac
	if echo $mimac | grep -e '\([A-Za-z0-9]\{2\}\:\)\{5\}[A-Za-z0-9]\{2\}'
	then 
		echo -e "patron mac correcto" 
		salida=1
	else
		echo -e "la MACKINTOSH NO ES buena" 
	fi
done
	# esto es para coger lineas desde la cabecera ifconfig | head -n 1
 	tarjetas=( `ifconfig | grep '^[a-z]' | tr -s " " | cut -d " " -f 1` )
	numtarjetas=${#tarjetas[*]}
	echo $numtarjetas
	echo ${tarjetas[0]}
	echo ${tarjetas[1]}
 # estoy cogiendo 										las tarjetas de red y 									meetiendolas en un array tarjetas
	for(( i=0; i<numtarjetas;i++))
		do
			echo "tarjeta numero " $((i+1))..... ${tarjetas[i]}
		done
tarjeta=30
	#while test $tarjeta -gt $numtarjetas || $tarjeta -lt 0
	#do
		read -p "Elige la opcion de tarjeta que quieras " tarjeta
		tarjeta=$(($tarjeta-1))
	#done
	echo ${tarjetas[tarjeta]}
sleep 8s

sudo ip neigh add $miip lladdr $mimac dev ${tarjetas[tarjeta]} nud perm

}
function añadirEntradaStatica(){
read -p "Introduce una iP valida" ip
salida=1
 while test $salida -ne 0 
 do
	 if  echo $ip | grep  '^\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}' # la ip tiene que ser la que 
								 # me marca el comando arp -ne... 
						#si no me da un error de direccion de hardware 							#invalida
		then 
		echo "cumple el patron"
			salida=0
		else 
			echo "No has introducido una ip valida" 
			salida=1
	fi
done
read -p "introduce ahora el valor que quieras ponerle a tu IP de la MAC" MAC
arp -s $ip $MAC && echo "Hecho!! "  
sleep 8s

}
#--------
opcion=0
while test  $opcion -ne 6

do 

	menu
	case $opcion in
	1)mostrarARP;;
	2)buscarMAC;;
	3)borrarEntrada;;
	4)añadirEntradaStatica;;
	5)añadirIpNueva;;
	 esac
	
done
